namespace hfincpp::integral::faster_kernel::rys_quadrature {
double electron_repulsive_integral_kernel_2333(const double C00, const double D00, const double B01, const double B10, const double B00, const double PA, const double PB, const double QC, const double QD, const double g0){
  double g1=C00*g0;
  double g2=1*B10*g0+C00*g1;
  double g3=2*B10*g1+C00*g2;
  double g4=3*B10*g2+C00*g3;
  double g5=4*B10*g3+C00*g4;
  double g6=D00*g0;
  double g7=1*B00*g0+D00*g1;
  double g8=2*B00*g1+D00*g2;
  double g9=3*B00*g2+D00*g3;
  double g10=4*B00*g3+D00*g4;
  double g11=5*B00*g4+D00*g5;
  double g12=1*B01*g0+D00*g6;
  double g13=1*B00*g6+1*B01*g1+D00*g7;
  double g14=2*B00*g7+1*B01*g2+D00*g8;
  double g15=3*B00*g8+1*B01*g3+D00*g9;
  double g16=4*B00*g9+1*B01*g4+D00*g10;
  double g17=5*B00*g10+1*B01*g5+D00*g11;
  double g18=2*B01*g6+D00*g12;
  double g19=1*B00*g12+2*B01*g7+D00*g13;
  double g20=2*B00*g13+2*B01*g8+D00*g14;
  double g21=3*B00*g14+2*B01*g9+D00*g15;
  double g22=4*B00*g15+2*B01*g10+D00*g16;
  double g23=5*B00*g16+2*B01*g11+D00*g17;
  double g24=3*B01*g12+D00*g18;
  double g25=1*B00*g18+3*B01*g13+D00*g19;
  double g26=2*B00*g19+3*B01*g14+D00*g20;
  double g27=3*B00*g20+3*B01*g15+D00*g21;
  double g28=4*B00*g21+3*B01*g16+D00*g22;
  double g29=5*B00*g22+3*B01*g17+D00*g23;
  double g30=4*B01*g18+D00*g24;
  double g31=1*B00*g24+4*B01*g19+D00*g25;
  double g32=2*B00*g25+4*B01*g20+D00*g26;
  double g33=3*B00*g26+4*B01*g21+D00*g27;
  double g34=4*B00*g27+4*B01*g22+D00*g28;
  double g35=5*B00*g28+4*B01*g23+D00*g29;
  double g36=5*B01*g24+D00*g30;
  double g37=1*B00*g30+5*B01*g25+D00*g31;
  double g38=2*B00*g31+5*B01*g26+D00*g32;
  double g39=3*B00*g32+5*B01*g27+D00*g33;
  double g40=4*B00*g33+5*B01*g28+D00*g34;
  double g41=5*B00*g34+5*B01*g29+D00*g35;

  double result  = (PA*PA*PB*PB*PB*QC*QC*QC*QD*QD*QD)*g0;
         result += (3*PA*PA*PB*PB*QC*QC*QC*QD*QD*QD+2*PA*PB*PB*PB*QC*QC*QC*QD*QD*QD)*g1;
         result += (3*PA*PA*PB*QC*QC*QC*QD*QD*QD+6*PA*PB*PB*QC*QC*QC*QD*QD*QD+PB*PB*PB*QC*QC*QC*QD*QD*QD)*g2;
         result += (PA*PA*QC*QC*QC*QD*QD*QD+6*PA*PB*QC*QC*QC*QD*QD*QD+3*PB*PB*QC*QC*QC*QD*QD*QD)*g3;
         result += (2*PA*QC*QC*QC*QD*QD*QD+3*PB*QC*QC*QC*QD*QD*QD)*g4;
         result += (QC*QC*QC*QD*QD*QD)*g5;
         result += (3*PA*PA*PB*PB*PB*QC*QC*QC*QD*QD+3*PA*PA*PB*PB*PB*QC*QC*QD*QD*QD)*g6;
         result += (9*PA*PA*PB*PB*QC*QC*QC*QD*QD+6*PA*PB*PB*PB*QC*QC*QC*QD*QD+9*PA*PA*PB*PB*QC*QC*QD*QD*QD+6*PA*PB*PB*PB*QC*QC*QD*QD*QD)*g7;
         result += (9*PA*PA*PB*QC*QC*QC*QD*QD+18*PA*PB*PB*QC*QC*QC*QD*QD+3*PB*PB*PB*QC*QC*QC*QD*QD+9*PA*PA*PB*QC*QC*QD*QD*QD+18*PA*PB*PB*QC*QC*QD*QD*QD+3*PB*PB*PB*QC*QC*QD*QD*QD)*g8;
         result += (3*PA*PA*QC*QC*QC*QD*QD+18*PA*PB*QC*QC*QC*QD*QD+9*PB*PB*QC*QC*QC*QD*QD+3*PA*PA*QC*QC*QD*QD*QD+18*PA*PB*QC*QC*QD*QD*QD+9*PB*PB*QC*QC*QD*QD*QD)*g9;
         result += (6*PA*QC*QC*QC*QD*QD+9*PB*QC*QC*QC*QD*QD+6*PA*QC*QC*QD*QD*QD+9*PB*QC*QC*QD*QD*QD)*g10;
         result += (3*QC*QC*QC*QD*QD+3*QC*QC*QD*QD*QD)*g11;
         result += (3*PA*PA*PB*PB*PB*QC*QC*QC*QD+9*PA*PA*PB*PB*PB*QC*QC*QD*QD+3*PA*PA*PB*PB*PB*QC*QD*QD*QD)*g12;
         result += (9*PA*PA*PB*PB*QC*QC*QC*QD+6*PA*PB*PB*PB*QC*QC*QC*QD+27*PA*PA*PB*PB*QC*QC*QD*QD+18*PA*PB*PB*PB*QC*QC*QD*QD+9*PA*PA*PB*PB*QC*QD*QD*QD+6*PA*PB*PB*PB*QC*QD*QD*QD)*g13;
         result += (9*PA*PA*PB*QC*QC*QC*QD+18*PA*PB*PB*QC*QC*QC*QD+3*PB*PB*PB*QC*QC*QC*QD+27*PA*PA*PB*QC*QC*QD*QD+54*PA*PB*PB*QC*QC*QD*QD+9*PB*PB*PB*QC*QC*QD*QD+9*PA*PA*PB*QC*QD*QD*QD+18*PA*PB*PB*QC*QD*QD*QD+3*PB*PB*PB*QC*QD*QD*QD)*g14;
         result += (3*PA*PA*QC*QC*QC*QD+18*PA*PB*QC*QC*QC*QD+9*PB*PB*QC*QC*QC*QD+9*PA*PA*QC*QC*QD*QD+54*PA*PB*QC*QC*QD*QD+27*PB*PB*QC*QC*QD*QD+3*PA*PA*QC*QD*QD*QD+18*PA*PB*QC*QD*QD*QD+9*PB*PB*QC*QD*QD*QD)*g15;
         result += (6*PA*QC*QC*QC*QD+9*PB*QC*QC*QC*QD+18*PA*QC*QC*QD*QD+27*PB*QC*QC*QD*QD+6*PA*QC*QD*QD*QD+9*PB*QC*QD*QD*QD)*g16;
         result += (3*QC*QC*QC*QD+9*QC*QC*QD*QD+3*QC*QD*QD*QD)*g17;
         result += (PA*PA*PB*PB*PB*QC*QC*QC+9*PA*PA*PB*PB*PB*QC*QC*QD+9*PA*PA*PB*PB*PB*QC*QD*QD+PA*PA*PB*PB*PB*QD*QD*QD)*g18;
         result += (3*PA*PA*PB*PB*QC*QC*QC+2*PA*PB*PB*PB*QC*QC*QC+27*PA*PA*PB*PB*QC*QC*QD+18*PA*PB*PB*PB*QC*QC*QD+27*PA*PA*PB*PB*QC*QD*QD+18*PA*PB*PB*PB*QC*QD*QD+3*PA*PA*PB*PB*QD*QD*QD+2*PA*PB*PB*PB*QD*QD*QD)*g19;
         result += (3*PA*PA*PB*QC*QC*QC+6*PA*PB*PB*QC*QC*QC+PB*PB*PB*QC*QC*QC+27*PA*PA*PB*QC*QC*QD+54*PA*PB*PB*QC*QC*QD+9*PB*PB*PB*QC*QC*QD+27*PA*PA*PB*QC*QD*QD+54*PA*PB*PB*QC*QD*QD+9*PB*PB*PB*QC*QD*QD+3*PA*PA*PB*QD*QD*QD+6*PA*PB*PB*QD*QD*QD+PB*PB*PB*QD*QD*QD)*g20;
         result += (PA*PA*QC*QC*QC+6*PA*PB*QC*QC*QC+3*PB*PB*QC*QC*QC+9*PA*PA*QC*QC*QD+54*PA*PB*QC*QC*QD+27*PB*PB*QC*QC*QD+9*PA*PA*QC*QD*QD+54*PA*PB*QC*QD*QD+27*PB*PB*QC*QD*QD+PA*PA*QD*QD*QD+6*PA*PB*QD*QD*QD+3*PB*PB*QD*QD*QD)*g21;
         result += (2*PA*QC*QC*QC+3*PB*QC*QC*QC+18*PA*QC*QC*QD+27*PB*QC*QC*QD+18*PA*QC*QD*QD+27*PB*QC*QD*QD+2*PA*QD*QD*QD+3*PB*QD*QD*QD)*g22;
         result += (QC*QC*QC+9*QC*QC*QD+9*QC*QD*QD+QD*QD*QD)*g23;
         result += (3*PA*PA*PB*PB*PB*QC*QC+9*PA*PA*PB*PB*PB*QC*QD+3*PA*PA*PB*PB*PB*QD*QD)*g24;
         result += (9*PA*PA*PB*PB*QC*QC+6*PA*PB*PB*PB*QC*QC+27*PA*PA*PB*PB*QC*QD+18*PA*PB*PB*PB*QC*QD+9*PA*PA*PB*PB*QD*QD+6*PA*PB*PB*PB*QD*QD)*g25;
         result += (9*PA*PA*PB*QC*QC+18*PA*PB*PB*QC*QC+3*PB*PB*PB*QC*QC+27*PA*PA*PB*QC*QD+54*PA*PB*PB*QC*QD+9*PB*PB*PB*QC*QD+9*PA*PA*PB*QD*QD+18*PA*PB*PB*QD*QD+3*PB*PB*PB*QD*QD)*g26;
         result += (3*PA*PA*QC*QC+18*PA*PB*QC*QC+9*PB*PB*QC*QC+9*PA*PA*QC*QD+54*PA*PB*QC*QD+27*PB*PB*QC*QD+3*PA*PA*QD*QD+18*PA*PB*QD*QD+9*PB*PB*QD*QD)*g27;
         result += (6*PA*QC*QC+9*PB*QC*QC+18*PA*QC*QD+27*PB*QC*QD+6*PA*QD*QD+9*PB*QD*QD)*g28;
         result += (3*QC*QC+9*QC*QD+3*QD*QD)*g29;
         result += (3*PA*PA*PB*PB*PB*QC+3*PA*PA*PB*PB*PB*QD)*g30;
         result += (9*PA*PA*PB*PB*QC+6*PA*PB*PB*PB*QC+9*PA*PA*PB*PB*QD+6*PA*PB*PB*PB*QD)*g31;
         result += (9*PA*PA*PB*QC+18*PA*PB*PB*QC+3*PB*PB*PB*QC+9*PA*PA*PB*QD+18*PA*PB*PB*QD+3*PB*PB*PB*QD)*g32;
         result += (3*PA*PA*QC+18*PA*PB*QC+9*PB*PB*QC+3*PA*PA*QD+18*PA*PB*QD+9*PB*PB*QD)*g33;
         result += (6*PA*QC+9*PB*QC+6*PA*QD+9*PB*QD)*g34;
         result += (3*QC+3*QD)*g35;
         result += (PA*PA*PB*PB*PB)*g36;
         result += (3*PA*PA*PB*PB+2*PA*PB*PB*PB)*g37;
         result += (3*PA*PA*PB+6*PA*PB*PB+PB*PB*PB)*g38;
         result += (PA*PA+6*PA*PB+3*PB*PB)*g39;
         result += (2*PA+3*PB)*g40;
         result += (1)*g41;
  return result;
}
double electron_repulsive_integral_kernel_3233(const double C00, const double D00, const double B01, const double B10, const double B00, const double PA, const double PB, const double QC, const double QD, const double g0){
  double g1=C00*g0;
  double g2=1*B10*g0+C00*g1;
  double g3=2*B10*g1+C00*g2;
  double g4=3*B10*g2+C00*g3;
  double g5=4*B10*g3+C00*g4;
  double g6=D00*g0;
  double g7=1*B00*g0+D00*g1;
  double g8=2*B00*g1+D00*g2;
  double g9=3*B00*g2+D00*g3;
  double g10=4*B00*g3+D00*g4;
  double g11=5*B00*g4+D00*g5;
  double g12=1*B01*g0+D00*g6;
  double g13=1*B00*g6+1*B01*g1+D00*g7;
  double g14=2*B00*g7+1*B01*g2+D00*g8;
  double g15=3*B00*g8+1*B01*g3+D00*g9;
  double g16=4*B00*g9+1*B01*g4+D00*g10;
  double g17=5*B00*g10+1*B01*g5+D00*g11;
  double g18=2*B01*g6+D00*g12;
  double g19=1*B00*g12+2*B01*g7+D00*g13;
  double g20=2*B00*g13+2*B01*g8+D00*g14;
  double g21=3*B00*g14+2*B01*g9+D00*g15;
  double g22=4*B00*g15+2*B01*g10+D00*g16;
  double g23=5*B00*g16+2*B01*g11+D00*g17;
  double g24=3*B01*g12+D00*g18;
  double g25=1*B00*g18+3*B01*g13+D00*g19;
  double g26=2*B00*g19+3*B01*g14+D00*g20;
  double g27=3*B00*g20+3*B01*g15+D00*g21;
  double g28=4*B00*g21+3*B01*g16+D00*g22;
  double g29=5*B00*g22+3*B01*g17+D00*g23;
  double g30=4*B01*g18+D00*g24;
  double g31=1*B00*g24+4*B01*g19+D00*g25;
  double g32=2*B00*g25+4*B01*g20+D00*g26;
  double g33=3*B00*g26+4*B01*g21+D00*g27;
  double g34=4*B00*g27+4*B01*g22+D00*g28;
  double g35=5*B00*g28+4*B01*g23+D00*g29;
  double g36=5*B01*g24+D00*g30;
  double g37=1*B00*g30+5*B01*g25+D00*g31;
  double g38=2*B00*g31+5*B01*g26+D00*g32;
  double g39=3*B00*g32+5*B01*g27+D00*g33;
  double g40=4*B00*g33+5*B01*g28+D00*g34;
  double g41=5*B00*g34+5*B01*g29+D00*g35;

  double result  = (PA*PA*PA*PB*PB*QC*QC*QC*QD*QD*QD)*g0;
         result += (2*PA*PA*PA*PB*QC*QC*QC*QD*QD*QD+3*PA*PA*PB*PB*QC*QC*QC*QD*QD*QD)*g1;
         result += (PA*PA*PA*QC*QC*QC*QD*QD*QD+6*PA*PA*PB*QC*QC*QC*QD*QD*QD+3*PA*PB*PB*QC*QC*QC*QD*QD*QD)*g2;
         result += (3*PA*PA*QC*QC*QC*QD*QD*QD+6*PA*PB*QC*QC*QC*QD*QD*QD+PB*PB*QC*QC*QC*QD*QD*QD)*g3;
         result += (3*PA*QC*QC*QC*QD*QD*QD+2*PB*QC*QC*QC*QD*QD*QD)*g4;
         result += (QC*QC*QC*QD*QD*QD)*g5;
         result += (3*PA*PA*PA*PB*PB*QC*QC*QC*QD*QD+3*PA*PA*PA*PB*PB*QC*QC*QD*QD*QD)*g6;
         result += (6*PA*PA*PA*PB*QC*QC*QC*QD*QD+9*PA*PA*PB*PB*QC*QC*QC*QD*QD+6*PA*PA*PA*PB*QC*QC*QD*QD*QD+9*PA*PA*PB*PB*QC*QC*QD*QD*QD)*g7;
         result += (3*PA*PA*PA*QC*QC*QC*QD*QD+18*PA*PA*PB*QC*QC*QC*QD*QD+9*PA*PB*PB*QC*QC*QC*QD*QD+3*PA*PA*PA*QC*QC*QD*QD*QD+18*PA*PA*PB*QC*QC*QD*QD*QD+9*PA*PB*PB*QC*QC*QD*QD*QD)*g8;
         result += (9*PA*PA*QC*QC*QC*QD*QD+18*PA*PB*QC*QC*QC*QD*QD+3*PB*PB*QC*QC*QC*QD*QD+9*PA*PA*QC*QC*QD*QD*QD+18*PA*PB*QC*QC*QD*QD*QD+3*PB*PB*QC*QC*QD*QD*QD)*g9;
         result += (9*PA*QC*QC*QC*QD*QD+6*PB*QC*QC*QC*QD*QD+9*PA*QC*QC*QD*QD*QD+6*PB*QC*QC*QD*QD*QD)*g10;
         result += (3*QC*QC*QC*QD*QD+3*QC*QC*QD*QD*QD)*g11;
         result += (3*PA*PA*PA*PB*PB*QC*QC*QC*QD+9*PA*PA*PA*PB*PB*QC*QC*QD*QD+3*PA*PA*PA*PB*PB*QC*QD*QD*QD)*g12;
         result += (6*PA*PA*PA*PB*QC*QC*QC*QD+9*PA*PA*PB*PB*QC*QC*QC*QD+18*PA*PA*PA*PB*QC*QC*QD*QD+27*PA*PA*PB*PB*QC*QC*QD*QD+6*PA*PA*PA*PB*QC*QD*QD*QD+9*PA*PA*PB*PB*QC*QD*QD*QD)*g13;
         result += (3*PA*PA*PA*QC*QC*QC*QD+18*PA*PA*PB*QC*QC*QC*QD+9*PA*PB*PB*QC*QC*QC*QD+9*PA*PA*PA*QC*QC*QD*QD+54*PA*PA*PB*QC*QC*QD*QD+27*PA*PB*PB*QC*QC*QD*QD+3*PA*PA*PA*QC*QD*QD*QD+18*PA*PA*PB*QC*QD*QD*QD+9*PA*PB*PB*QC*QD*QD*QD)*g14;
         result += (9*PA*PA*QC*QC*QC*QD+18*PA*PB*QC*QC*QC*QD+3*PB*PB*QC*QC*QC*QD+27*PA*PA*QC*QC*QD*QD+54*PA*PB*QC*QC*QD*QD+9*PB*PB*QC*QC*QD*QD+9*PA*PA*QC*QD*QD*QD+18*PA*PB*QC*QD*QD*QD+3*PB*PB*QC*QD*QD*QD)*g15;
         result += (9*PA*QC*QC*QC*QD+6*PB*QC*QC*QC*QD+27*PA*QC*QC*QD*QD+18*PB*QC*QC*QD*QD+9*PA*QC*QD*QD*QD+6*PB*QC*QD*QD*QD)*g16;
         result += (3*QC*QC*QC*QD+9*QC*QC*QD*QD+3*QC*QD*QD*QD)*g17;
         result += (PA*PA*PA*PB*PB*QC*QC*QC+9*PA*PA*PA*PB*PB*QC*QC*QD+9*PA*PA*PA*PB*PB*QC*QD*QD+PA*PA*PA*PB*PB*QD*QD*QD)*g18;
         result += (2*PA*PA*PA*PB*QC*QC*QC+3*PA*PA*PB*PB*QC*QC*QC+18*PA*PA*PA*PB*QC*QC*QD+27*PA*PA*PB*PB*QC*QC*QD+18*PA*PA*PA*PB*QC*QD*QD+27*PA*PA*PB*PB*QC*QD*QD+2*PA*PA*PA*PB*QD*QD*QD+3*PA*PA*PB*PB*QD*QD*QD)*g19;
         result += (PA*PA*PA*QC*QC*QC+6*PA*PA*PB*QC*QC*QC+3*PA*PB*PB*QC*QC*QC+9*PA*PA*PA*QC*QC*QD+54*PA*PA*PB*QC*QC*QD+27*PA*PB*PB*QC*QC*QD+9*PA*PA*PA*QC*QD*QD+54*PA*PA*PB*QC*QD*QD+27*PA*PB*PB*QC*QD*QD+PA*PA*PA*QD*QD*QD+6*PA*PA*PB*QD*QD*QD+3*PA*PB*PB*QD*QD*QD)*g20;
         result += (3*PA*PA*QC*QC*QC+6*PA*PB*QC*QC*QC+PB*PB*QC*QC*QC+27*PA*PA*QC*QC*QD+54*PA*PB*QC*QC*QD+9*PB*PB*QC*QC*QD+27*PA*PA*QC*QD*QD+54*PA*PB*QC*QD*QD+9*PB*PB*QC*QD*QD+3*PA*PA*QD*QD*QD+6*PA*PB*QD*QD*QD+PB*PB*QD*QD*QD)*g21;
         result += (3*PA*QC*QC*QC+2*PB*QC*QC*QC+27*PA*QC*QC*QD+18*PB*QC*QC*QD+27*PA*QC*QD*QD+18*PB*QC*QD*QD+3*PA*QD*QD*QD+2*PB*QD*QD*QD)*g22;
         result += (QC*QC*QC+9*QC*QC*QD+9*QC*QD*QD+QD*QD*QD)*g23;
         result += (3*PA*PA*PA*PB*PB*QC*QC+9*PA*PA*PA*PB*PB*QC*QD+3*PA*PA*PA*PB*PB*QD*QD)*g24;
         result += (6*PA*PA*PA*PB*QC*QC+9*PA*PA*PB*PB*QC*QC+18*PA*PA*PA*PB*QC*QD+27*PA*PA*PB*PB*QC*QD+6*PA*PA*PA*PB*QD*QD+9*PA*PA*PB*PB*QD*QD)*g25;
         result += (3*PA*PA*PA*QC*QC+18*PA*PA*PB*QC*QC+9*PA*PB*PB*QC*QC+9*PA*PA*PA*QC*QD+54*PA*PA*PB*QC*QD+27*PA*PB*PB*QC*QD+3*PA*PA*PA*QD*QD+18*PA*PA*PB*QD*QD+9*PA*PB*PB*QD*QD)*g26;
         result += (9*PA*PA*QC*QC+18*PA*PB*QC*QC+3*PB*PB*QC*QC+27*PA*PA*QC*QD+54*PA*PB*QC*QD+9*PB*PB*QC*QD+9*PA*PA*QD*QD+18*PA*PB*QD*QD+3*PB*PB*QD*QD)*g27;
         result += (9*PA*QC*QC+6*PB*QC*QC+27*PA*QC*QD+18*PB*QC*QD+9*PA*QD*QD+6*PB*QD*QD)*g28;
         result += (3*QC*QC+9*QC*QD+3*QD*QD)*g29;
         result += (3*PA*PA*PA*PB*PB*QC+3*PA*PA*PA*PB*PB*QD)*g30;
         result += (6*PA*PA*PA*PB*QC+9*PA*PA*PB*PB*QC+6*PA*PA*PA*PB*QD+9*PA*PA*PB*PB*QD)*g31;
         result += (3*PA*PA*PA*QC+18*PA*PA*PB*QC+9*PA*PB*PB*QC+3*PA*PA*PA*QD+18*PA*PA*PB*QD+9*PA*PB*PB*QD)*g32;
         result += (9*PA*PA*QC+18*PA*PB*QC+3*PB*PB*QC+9*PA*PA*QD+18*PA*PB*QD+3*PB*PB*QD)*g33;
         result += (9*PA*QC+6*PB*QC+9*PA*QD+6*PB*QD)*g34;
         result += (3*QC+3*QD)*g35;
         result += (PA*PA*PA*PB*PB)*g36;
         result += (2*PA*PA*PA*PB+3*PA*PA*PB*PB)*g37;
         result += (PA*PA*PA+6*PA*PA*PB+3*PA*PB*PB)*g38;
         result += (3*PA*PA+6*PA*PB+PB*PB)*g39;
         result += (3*PA+2*PB)*g40;
         result += (1)*g41;
  return result;
}
double electron_repulsive_integral_kernel_3323(const double C00, const double D00, const double B01, const double B10, const double B00, const double PA, const double PB, const double QC, const double QD, const double g0){
  double g1=C00*g0;
  double g2=1*B10*g0+C00*g1;
  double g3=2*B10*g1+C00*g2;
  double g4=3*B10*g2+C00*g3;
  double g5=4*B10*g3+C00*g4;
  double g6=5*B10*g4+C00*g5;
  double g7=D00*g0;
  double g8=1*B00*g0+D00*g1;
  double g9=2*B00*g1+D00*g2;
  double g10=3*B00*g2+D00*g3;
  double g11=4*B00*g3+D00*g4;
  double g12=5*B00*g4+D00*g5;
  double g13=6*B00*g5+D00*g6;
  double g14=1*B01*g0+D00*g7;
  double g15=1*B00*g7+1*B01*g1+D00*g8;
  double g16=2*B00*g8+1*B01*g2+D00*g9;
  double g17=3*B00*g9+1*B01*g3+D00*g10;
  double g18=4*B00*g10+1*B01*g4+D00*g11;
  double g19=5*B00*g11+1*B01*g5+D00*g12;
  double g20=6*B00*g12+1*B01*g6+D00*g13;
  double g21=2*B01*g7+D00*g14;
  double g22=1*B00*g14+2*B01*g8+D00*g15;
  double g23=2*B00*g15+2*B01*g9+D00*g16;
  double g24=3*B00*g16+2*B01*g10+D00*g17;
  double g25=4*B00*g17+2*B01*g11+D00*g18;
  double g26=5*B00*g18+2*B01*g12+D00*g19;
  double g27=6*B00*g19+2*B01*g13+D00*g20;
  double g28=3*B01*g14+D00*g21;
  double g29=1*B00*g21+3*B01*g15+D00*g22;
  double g30=2*B00*g22+3*B01*g16+D00*g23;
  double g31=3*B00*g23+3*B01*g17+D00*g24;
  double g32=4*B00*g24+3*B01*g18+D00*g25;
  double g33=5*B00*g25+3*B01*g19+D00*g26;
  double g34=6*B00*g26+3*B01*g20+D00*g27;
  double g35=4*B01*g21+D00*g28;
  double g36=1*B00*g28+4*B01*g22+D00*g29;
  double g37=2*B00*g29+4*B01*g23+D00*g30;
  double g38=3*B00*g30+4*B01*g24+D00*g31;
  double g39=4*B00*g31+4*B01*g25+D00*g32;
  double g40=5*B00*g32+4*B01*g26+D00*g33;
  double g41=6*B00*g33+4*B01*g27+D00*g34;

  double result  = (PA*PA*PA*PB*PB*PB*QC*QC*QD*QD*QD)*g0;
         result += (3*PA*PA*PA*PB*PB*QC*QC*QD*QD*QD+3*PA*PA*PB*PB*PB*QC*QC*QD*QD*QD)*g1;
         result += (3*PA*PA*PA*PB*QC*QC*QD*QD*QD+9*PA*PA*PB*PB*QC*QC*QD*QD*QD+3*PA*PB*PB*PB*QC*QC*QD*QD*QD)*g2;
         result += (PA*PA*PA*QC*QC*QD*QD*QD+9*PA*PA*PB*QC*QC*QD*QD*QD+9*PA*PB*PB*QC*QC*QD*QD*QD+PB*PB*PB*QC*QC*QD*QD*QD)*g3;
         result += (3*PA*PA*QC*QC*QD*QD*QD+9*PA*PB*QC*QC*QD*QD*QD+3*PB*PB*QC*QC*QD*QD*QD)*g4;
         result += (3*PA*QC*QC*QD*QD*QD+3*PB*QC*QC*QD*QD*QD)*g5;
         result += (QC*QC*QD*QD*QD)*g6;
         result += (3*PA*PA*PA*PB*PB*PB*QC*QC*QD*QD+2*PA*PA*PA*PB*PB*PB*QC*QD*QD*QD)*g7;
         result += (9*PA*PA*PA*PB*PB*QC*QC*QD*QD+9*PA*PA*PB*PB*PB*QC*QC*QD*QD+6*PA*PA*PA*PB*PB*QC*QD*QD*QD+6*PA*PA*PB*PB*PB*QC*QD*QD*QD)*g8;
         result += (9*PA*PA*PA*PB*QC*QC*QD*QD+27*PA*PA*PB*PB*QC*QC*QD*QD+9*PA*PB*PB*PB*QC*QC*QD*QD+6*PA*PA*PA*PB*QC*QD*QD*QD+18*PA*PA*PB*PB*QC*QD*QD*QD+6*PA*PB*PB*PB*QC*QD*QD*QD)*g9;
         result += (3*PA*PA*PA*QC*QC*QD*QD+27*PA*PA*PB*QC*QC*QD*QD+27*PA*PB*PB*QC*QC*QD*QD+3*PB*PB*PB*QC*QC*QD*QD+2*PA*PA*PA*QC*QD*QD*QD+18*PA*PA*PB*QC*QD*QD*QD+18*PA*PB*PB*QC*QD*QD*QD+2*PB*PB*PB*QC*QD*QD*QD)*g10;
         result += (9*PA*PA*QC*QC*QD*QD+27*PA*PB*QC*QC*QD*QD+9*PB*PB*QC*QC*QD*QD+6*PA*PA*QC*QD*QD*QD+18*PA*PB*QC*QD*QD*QD+6*PB*PB*QC*QD*QD*QD)*g11;
         result += (9*PA*QC*QC*QD*QD+9*PB*QC*QC*QD*QD+6*PA*QC*QD*QD*QD+6*PB*QC*QD*QD*QD)*g12;
         result += (3*QC*QC*QD*QD+2*QC*QD*QD*QD)*g13;
         result += (3*PA*PA*PA*PB*PB*PB*QC*QC*QD+6*PA*PA*PA*PB*PB*PB*QC*QD*QD+PA*PA*PA*PB*PB*PB*QD*QD*QD)*g14;
         result += (9*PA*PA*PA*PB*PB*QC*QC*QD+9*PA*PA*PB*PB*PB*QC*QC*QD+18*PA*PA*PA*PB*PB*QC*QD*QD+18*PA*PA*PB*PB*PB*QC*QD*QD+3*PA*PA*PA*PB*PB*QD*QD*QD+3*PA*PA*PB*PB*PB*QD*QD*QD)*g15;
         result += (9*PA*PA*PA*PB*QC*QC*QD+27*PA*PA*PB*PB*QC*QC*QD+9*PA*PB*PB*PB*QC*QC*QD+18*PA*PA*PA*PB*QC*QD*QD+54*PA*PA*PB*PB*QC*QD*QD+18*PA*PB*PB*PB*QC*QD*QD+3*PA*PA*PA*PB*QD*QD*QD+9*PA*PA*PB*PB*QD*QD*QD+3*PA*PB*PB*PB*QD*QD*QD)*g16;
         result += (3*PA*PA*PA*QC*QC*QD+27*PA*PA*PB*QC*QC*QD+27*PA*PB*PB*QC*QC*QD+3*PB*PB*PB*QC*QC*QD+6*PA*PA*PA*QC*QD*QD+54*PA*PA*PB*QC*QD*QD+54*PA*PB*PB*QC*QD*QD+6*PB*PB*PB*QC*QD*QD+PA*PA*PA*QD*QD*QD+9*PA*PA*PB*QD*QD*QD+9*PA*PB*PB*QD*QD*QD+PB*PB*PB*QD*QD*QD)*g17;
         result += (9*PA*PA*QC*QC*QD+27*PA*PB*QC*QC*QD+9*PB*PB*QC*QC*QD+18*PA*PA*QC*QD*QD+54*PA*PB*QC*QD*QD+18*PB*PB*QC*QD*QD+3*PA*PA*QD*QD*QD+9*PA*PB*QD*QD*QD+3*PB*PB*QD*QD*QD)*g18;
         result += (9*PA*QC*QC*QD+9*PB*QC*QC*QD+18*PA*QC*QD*QD+18*PB*QC*QD*QD+3*PA*QD*QD*QD+3*PB*QD*QD*QD)*g19;
         result += (3*QC*QC*QD+6*QC*QD*QD+QD*QD*QD)*g20;
         result += (PA*PA*PA*PB*PB*PB*QC*QC+6*PA*PA*PA*PB*PB*PB*QC*QD+3*PA*PA*PA*PB*PB*PB*QD*QD)*g21;
         result += (3*PA*PA*PA*PB*PB*QC*QC+3*PA*PA*PB*PB*PB*QC*QC+18*PA*PA*PA*PB*PB*QC*QD+18*PA*PA*PB*PB*PB*QC*QD+9*PA*PA*PA*PB*PB*QD*QD+9*PA*PA*PB*PB*PB*QD*QD)*g22;
         result += (3*PA*PA*PA*PB*QC*QC+9*PA*PA*PB*PB*QC*QC+3*PA*PB*PB*PB*QC*QC+18*PA*PA*PA*PB*QC*QD+54*PA*PA*PB*PB*QC*QD+18*PA*PB*PB*PB*QC*QD+9*PA*PA*PA*PB*QD*QD+27*PA*PA*PB*PB*QD*QD+9*PA*PB*PB*PB*QD*QD)*g23;
         result += (PA*PA*PA*QC*QC+9*PA*PA*PB*QC*QC+9*PA*PB*PB*QC*QC+PB*PB*PB*QC*QC+6*PA*PA*PA*QC*QD+54*PA*PA*PB*QC*QD+54*PA*PB*PB*QC*QD+6*PB*PB*PB*QC*QD+3*PA*PA*PA*QD*QD+27*PA*PA*PB*QD*QD+27*PA*PB*PB*QD*QD+3*PB*PB*PB*QD*QD)*g24;
         result += (3*PA*PA*QC*QC+9*PA*PB*QC*QC+3*PB*PB*QC*QC+18*PA*PA*QC*QD+54*PA*PB*QC*QD+18*PB*PB*QC*QD+9*PA*PA*QD*QD+27*PA*PB*QD*QD+9*PB*PB*QD*QD)*g25;
         result += (3*PA*QC*QC+3*PB*QC*QC+18*PA*QC*QD+18*PB*QC*QD+9*PA*QD*QD+9*PB*QD*QD)*g26;
         result += (QC*QC+6*QC*QD+3*QD*QD)*g27;
         result += (2*PA*PA*PA*PB*PB*PB*QC+3*PA*PA*PA*PB*PB*PB*QD)*g28;
         result += (6*PA*PA*PA*PB*PB*QC+6*PA*PA*PB*PB*PB*QC+9*PA*PA*PA*PB*PB*QD+9*PA*PA*PB*PB*PB*QD)*g29;
         result += (6*PA*PA*PA*PB*QC+18*PA*PA*PB*PB*QC+6*PA*PB*PB*PB*QC+9*PA*PA*PA*PB*QD+27*PA*PA*PB*PB*QD+9*PA*PB*PB*PB*QD)*g30;
         result += (2*PA*PA*PA*QC+18*PA*PA*PB*QC+18*PA*PB*PB*QC+2*PB*PB*PB*QC+3*PA*PA*PA*QD+27*PA*PA*PB*QD+27*PA*PB*PB*QD+3*PB*PB*PB*QD)*g31;
         result += (6*PA*PA*QC+18*PA*PB*QC+6*PB*PB*QC+9*PA*PA*QD+27*PA*PB*QD+9*PB*PB*QD)*g32;
         result += (6*PA*QC+6*PB*QC+9*PA*QD+9*PB*QD)*g33;
         result += (2*QC+3*QD)*g34;
         result += (PA*PA*PA*PB*PB*PB)*g35;
         result += (3*PA*PA*PA*PB*PB+3*PA*PA*PB*PB*PB)*g36;
         result += (3*PA*PA*PA*PB+9*PA*PA*PB*PB+3*PA*PB*PB*PB)*g37;
         result += (PA*PA*PA+9*PA*PA*PB+9*PA*PB*PB+PB*PB*PB)*g38;
         result += (3*PA*PA+9*PA*PB+3*PB*PB)*g39;
         result += (3*PA+3*PB)*g40;
         result += (1)*g41;
  return result;
}
double electron_repulsive_integral_kernel_3332(const double C00, const double D00, const double B01, const double B10, const double B00, const double PA, const double PB, const double QC, const double QD, const double g0){
  double g1=C00*g0;
  double g2=1*B10*g0+C00*g1;
  double g3=2*B10*g1+C00*g2;
  double g4=3*B10*g2+C00*g3;
  double g5=4*B10*g3+C00*g4;
  double g6=5*B10*g4+C00*g5;
  double g7=D00*g0;
  double g8=1*B00*g0+D00*g1;
  double g9=2*B00*g1+D00*g2;
  double g10=3*B00*g2+D00*g3;
  double g11=4*B00*g3+D00*g4;
  double g12=5*B00*g4+D00*g5;
  double g13=6*B00*g5+D00*g6;
  double g14=1*B01*g0+D00*g7;
  double g15=1*B00*g7+1*B01*g1+D00*g8;
  double g16=2*B00*g8+1*B01*g2+D00*g9;
  double g17=3*B00*g9+1*B01*g3+D00*g10;
  double g18=4*B00*g10+1*B01*g4+D00*g11;
  double g19=5*B00*g11+1*B01*g5+D00*g12;
  double g20=6*B00*g12+1*B01*g6+D00*g13;
  double g21=2*B01*g7+D00*g14;
  double g22=1*B00*g14+2*B01*g8+D00*g15;
  double g23=2*B00*g15+2*B01*g9+D00*g16;
  double g24=3*B00*g16+2*B01*g10+D00*g17;
  double g25=4*B00*g17+2*B01*g11+D00*g18;
  double g26=5*B00*g18+2*B01*g12+D00*g19;
  double g27=6*B00*g19+2*B01*g13+D00*g20;
  double g28=3*B01*g14+D00*g21;
  double g29=1*B00*g21+3*B01*g15+D00*g22;
  double g30=2*B00*g22+3*B01*g16+D00*g23;
  double g31=3*B00*g23+3*B01*g17+D00*g24;
  double g32=4*B00*g24+3*B01*g18+D00*g25;
  double g33=5*B00*g25+3*B01*g19+D00*g26;
  double g34=6*B00*g26+3*B01*g20+D00*g27;
  double g35=4*B01*g21+D00*g28;
  double g36=1*B00*g28+4*B01*g22+D00*g29;
  double g37=2*B00*g29+4*B01*g23+D00*g30;
  double g38=3*B00*g30+4*B01*g24+D00*g31;
  double g39=4*B00*g31+4*B01*g25+D00*g32;
  double g40=5*B00*g32+4*B01*g26+D00*g33;
  double g41=6*B00*g33+4*B01*g27+D00*g34;

  double result  = (PA*PA*PA*PB*PB*PB*QC*QC*QC*QD*QD)*g0;
         result += (3*PA*PA*PA*PB*PB*QC*QC*QC*QD*QD+3*PA*PA*PB*PB*PB*QC*QC*QC*QD*QD)*g1;
         result += (3*PA*PA*PA*PB*QC*QC*QC*QD*QD+9*PA*PA*PB*PB*QC*QC*QC*QD*QD+3*PA*PB*PB*PB*QC*QC*QC*QD*QD)*g2;
         result += (PA*PA*PA*QC*QC*QC*QD*QD+9*PA*PA*PB*QC*QC*QC*QD*QD+9*PA*PB*PB*QC*QC*QC*QD*QD+PB*PB*PB*QC*QC*QC*QD*QD)*g3;
         result += (3*PA*PA*QC*QC*QC*QD*QD+9*PA*PB*QC*QC*QC*QD*QD+3*PB*PB*QC*QC*QC*QD*QD)*g4;
         result += (3*PA*QC*QC*QC*QD*QD+3*PB*QC*QC*QC*QD*QD)*g5;
         result += (QC*QC*QC*QD*QD)*g6;
         result += (2*PA*PA*PA*PB*PB*PB*QC*QC*QC*QD+3*PA*PA*PA*PB*PB*PB*QC*QC*QD*QD)*g7;
         result += (6*PA*PA*PA*PB*PB*QC*QC*QC*QD+6*PA*PA*PB*PB*PB*QC*QC*QC*QD+9*PA*PA*PA*PB*PB*QC*QC*QD*QD+9*PA*PA*PB*PB*PB*QC*QC*QD*QD)*g8;
         result += (6*PA*PA*PA*PB*QC*QC*QC*QD+18*PA*PA*PB*PB*QC*QC*QC*QD+6*PA*PB*PB*PB*QC*QC*QC*QD+9*PA*PA*PA*PB*QC*QC*QD*QD+27*PA*PA*PB*PB*QC*QC*QD*QD+9*PA*PB*PB*PB*QC*QC*QD*QD)*g9;
         result += (2*PA*PA*PA*QC*QC*QC*QD+18*PA*PA*PB*QC*QC*QC*QD+18*PA*PB*PB*QC*QC*QC*QD+2*PB*PB*PB*QC*QC*QC*QD+3*PA*PA*PA*QC*QC*QD*QD+27*PA*PA*PB*QC*QC*QD*QD+27*PA*PB*PB*QC*QC*QD*QD+3*PB*PB*PB*QC*QC*QD*QD)*g10;
         result += (6*PA*PA*QC*QC*QC*QD+18*PA*PB*QC*QC*QC*QD+6*PB*PB*QC*QC*QC*QD+9*PA*PA*QC*QC*QD*QD+27*PA*PB*QC*QC*QD*QD+9*PB*PB*QC*QC*QD*QD)*g11;
         result += (6*PA*QC*QC*QC*QD+6*PB*QC*QC*QC*QD+9*PA*QC*QC*QD*QD+9*PB*QC*QC*QD*QD)*g12;
         result += (2*QC*QC*QC*QD+3*QC*QC*QD*QD)*g13;
         result += (PA*PA*PA*PB*PB*PB*QC*QC*QC+6*PA*PA*PA*PB*PB*PB*QC*QC*QD+3*PA*PA*PA*PB*PB*PB*QC*QD*QD)*g14;
         result += (3*PA*PA*PA*PB*PB*QC*QC*QC+3*PA*PA*PB*PB*PB*QC*QC*QC+18*PA*PA*PA*PB*PB*QC*QC*QD+18*PA*PA*PB*PB*PB*QC*QC*QD+9*PA*PA*PA*PB*PB*QC*QD*QD+9*PA*PA*PB*PB*PB*QC*QD*QD)*g15;
         result += (3*PA*PA*PA*PB*QC*QC*QC+9*PA*PA*PB*PB*QC*QC*QC+3*PA*PB*PB*PB*QC*QC*QC+18*PA*PA*PA*PB*QC*QC*QD+54*PA*PA*PB*PB*QC*QC*QD+18*PA*PB*PB*PB*QC*QC*QD+9*PA*PA*PA*PB*QC*QD*QD+27*PA*PA*PB*PB*QC*QD*QD+9*PA*PB*PB*PB*QC*QD*QD)*g16;
         result += (PA*PA*PA*QC*QC*QC+9*PA*PA*PB*QC*QC*QC+9*PA*PB*PB*QC*QC*QC+PB*PB*PB*QC*QC*QC+6*PA*PA*PA*QC*QC*QD+54*PA*PA*PB*QC*QC*QD+54*PA*PB*PB*QC*QC*QD+6*PB*PB*PB*QC*QC*QD+3*PA*PA*PA*QC*QD*QD+27*PA*PA*PB*QC*QD*QD+27*PA*PB*PB*QC*QD*QD+3*PB*PB*PB*QC*QD*QD)*g17;
         result += (3*PA*PA*QC*QC*QC+9*PA*PB*QC*QC*QC+3*PB*PB*QC*QC*QC+18*PA*PA*QC*QC*QD+54*PA*PB*QC*QC*QD+18*PB*PB*QC*QC*QD+9*PA*PA*QC*QD*QD+27*PA*PB*QC*QD*QD+9*PB*PB*QC*QD*QD)*g18;
         result += (3*PA*QC*QC*QC+3*PB*QC*QC*QC+18*PA*QC*QC*QD+18*PB*QC*QC*QD+9*PA*QC*QD*QD+9*PB*QC*QD*QD)*g19;
         result += (QC*QC*QC+6*QC*QC*QD+3*QC*QD*QD)*g20;
         result += (3*PA*PA*PA*PB*PB*PB*QC*QC+6*PA*PA*PA*PB*PB*PB*QC*QD+PA*PA*PA*PB*PB*PB*QD*QD)*g21;
         result += (9*PA*PA*PA*PB*PB*QC*QC+9*PA*PA*PB*PB*PB*QC*QC+18*PA*PA*PA*PB*PB*QC*QD+18*PA*PA*PB*PB*PB*QC*QD+3*PA*PA*PA*PB*PB*QD*QD+3*PA*PA*PB*PB*PB*QD*QD)*g22;
         result += (9*PA*PA*PA*PB*QC*QC+27*PA*PA*PB*PB*QC*QC+9*PA*PB*PB*PB*QC*QC+18*PA*PA*PA*PB*QC*QD+54*PA*PA*PB*PB*QC*QD+18*PA*PB*PB*PB*QC*QD+3*PA*PA*PA*PB*QD*QD+9*PA*PA*PB*PB*QD*QD+3*PA*PB*PB*PB*QD*QD)*g23;
         result += (3*PA*PA*PA*QC*QC+27*PA*PA*PB*QC*QC+27*PA*PB*PB*QC*QC+3*PB*PB*PB*QC*QC+6*PA*PA*PA*QC*QD+54*PA*PA*PB*QC*QD+54*PA*PB*PB*QC*QD+6*PB*PB*PB*QC*QD+PA*PA*PA*QD*QD+9*PA*PA*PB*QD*QD+9*PA*PB*PB*QD*QD+PB*PB*PB*QD*QD)*g24;
         result += (9*PA*PA*QC*QC+27*PA*PB*QC*QC+9*PB*PB*QC*QC+18*PA*PA*QC*QD+54*PA*PB*QC*QD+18*PB*PB*QC*QD+3*PA*PA*QD*QD+9*PA*PB*QD*QD+3*PB*PB*QD*QD)*g25;
         result += (9*PA*QC*QC+9*PB*QC*QC+18*PA*QC*QD+18*PB*QC*QD+3*PA*QD*QD+3*PB*QD*QD)*g26;
         result += (3*QC*QC+6*QC*QD+QD*QD)*g27;
         result += (3*PA*PA*PA*PB*PB*PB*QC+2*PA*PA*PA*PB*PB*PB*QD)*g28;
         result += (9*PA*PA*PA*PB*PB*QC+9*PA*PA*PB*PB*PB*QC+6*PA*PA*PA*PB*PB*QD+6*PA*PA*PB*PB*PB*QD)*g29;
         result += (9*PA*PA*PA*PB*QC+27*PA*PA*PB*PB*QC+9*PA*PB*PB*PB*QC+6*PA*PA*PA*PB*QD+18*PA*PA*PB*PB*QD+6*PA*PB*PB*PB*QD)*g30;
         result += (3*PA*PA*PA*QC+27*PA*PA*PB*QC+27*PA*PB*PB*QC+3*PB*PB*PB*QC+2*PA*PA*PA*QD+18*PA*PA*PB*QD+18*PA*PB*PB*QD+2*PB*PB*PB*QD)*g31;
         result += (9*PA*PA*QC+27*PA*PB*QC+9*PB*PB*QC+6*PA*PA*QD+18*PA*PB*QD+6*PB*PB*QD)*g32;
         result += (9*PA*QC+9*PB*QC+6*PA*QD+6*PB*QD)*g33;
         result += (3*QC+2*QD)*g34;
         result += (PA*PA*PA*PB*PB*PB)*g35;
         result += (3*PA*PA*PA*PB*PB+3*PA*PA*PB*PB*PB)*g36;
         result += (3*PA*PA*PA*PB+9*PA*PA*PB*PB+3*PA*PB*PB*PB)*g37;
         result += (PA*PA*PA+9*PA*PA*PB+9*PA*PB*PB+PB*PB*PB)*g38;
         result += (3*PA*PA+9*PA*PB+3*PB*PB)*g39;
         result += (3*PA+3*PB)*g40;
         result += (1)*g41;
  return result;
}
}